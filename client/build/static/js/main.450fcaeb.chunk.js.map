{"version":3,"sources":["SocketContext.js","components/VideoPlayer.js","components/Notifications.js","components/Options.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setcallAccepted","callEnded","setcallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setidToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","console","log","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.450fcaeb.chunk.js","sourcesContent":["import React , {createContext , useState , useRef , useEffect } from 'react';\r\nimport {io} from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n//import { children } from 'react';\r\n\r\nconst SocketContext = createContext();\r\n//http://localhost:5000\r\nconst socket = io('https://video-chat-app-onkar.herokuapp.com/');\r\n\r\nconst ContextProvider = ({children})=>{\r\n\r\n    const [stream , setStream ] = useState(null);\r\n    const [me , setMe] = useState('');\r\n    const [call ,setCall] = useState({});\r\n    const [callAccepted , setcallAccepted] = useState(false);\r\n    const [callEnded , setcallEnded] = useState(false);\r\n    const [name , setName] = useState('');\r\n\r\n    const myVideo = useRef(null);\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        navigator.mediaDevices.getUserMedia({video : true , audio : true})  //retruns a promise\r\n            .then((currentStream)=>{\r\n                setStream(currentStream); \r\n\r\n               // myVideo.current.srcObject = currentStream;\r\n                myVideo.current.srcObject = currentStream;\r\n            });\r\n\r\n        socket.on('me' , (id)=> setMe(id));\r\n\r\n        socket.on('callUser', ({from , name : callerName , signal})=>{\r\n\r\n            setCall({isReceivedCall : true , from , name : callerName, signal});\r\n        }); \r\n\r\n    },[]);\r\n\r\n    const answerCall = ()=>{\r\n        setcallAccepted(true);\r\n\r\n        const peer = new Peer({initiator : false , trickle: false , stream});\r\n\r\n        peer.on('signal' , (data)=>{\r\n            socket.emit('answerCall',{signal : data , to : call.from});\r\n        });\r\n\r\n        peer.on('stream' , (currentStream)=>{\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const callUser = (id)=>{\r\n\r\n        const peer = new Peer({initiator : true , trickle: false , stream});\r\n\r\n        peer.on('signal' , (data)=>{\r\n            socket.emit('callUser',{userToCall : id , signalData : data, from : me  , name });\r\n        });\r\n\r\n        peer.on('stream' , (currentStream)=>{\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal)=>{\r\n            setcallAccepted(true);\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = ()=>{\r\n\r\n        setcallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}>\r\n\r\n        {children}\r\n\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport {ContextProvider , SocketContext};","import React , {useContext} from 'react';\r\nimport {Grid , Typography , Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport  {SocketContext } from '../SocketContext';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst VideoPlayer = ()=>{\r\n\r\n    const {name , callAccepted , myVideo , userVideo , callEnded , stream , call} = useContext(SocketContext);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n\r\n            {/*our video*/}\r\n            {stream && (\r\n                <Paper className={classes.paper}>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\r\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video}/>\r\n                    </Grid>\r\n\r\n                </Paper>\r\n            )}\r\n           \r\n\r\n            {/*Users video*/}\r\n            {callAccepted && !callEnded &&(\r\n                <Paper className={classes.paper}>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\r\n                        <video playsInline muted ref={userVideo} autoPlay className={classes.video}/>\r\n                    </Grid>\r\n\r\n                </Paper>\r\n            )}\r\n            \r\n       </Grid>\r\n    );\r\n}\r\n\r\nexport default VideoPlayer;","import React, {useContext}from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst Notifications = ()=>{\r\n    const {answerCall , call , callAccepted } = useContext(SocketContext);\r\n    return (\r\n        <div>\r\n            {call.isReceivedCall && !callAccepted && (\r\n                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                    <h1>{call.name} is calling</h1>\r\n                    <Button variant='contained' color='primary' onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React, {useContext, useState} from 'react';\r\nimport {Button , TextField , Grid , Typography , Container , Paper} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment , Phone , PhoneDisabled } from '@material-ui/icons';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n}));\r\n\r\nconst Options = ({children})=>{\r\n\r\n    const {me, callAccepted, callEnded, name, setName, leaveCall, callUser } = useContext(SocketContext);\r\n\r\n    const [idToCall , setidToCall] = useState('');\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete='off'>\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}> \r\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={(e)=>setName(e.target.value)} fullWidth/>\r\n                            {/*console.log(me)*/}\r\n                            {/*console.log('This is me')*/}\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant='contained' color='primary' fullWidth  className={classes.margin} startIcon={<Assignment fontSize=\"large\"/>}>\r\n                                    Copy your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className={classes.padding}> \r\n                            <Typography gutterBottom variant=\"h6\">Make a call </Typography>\r\n                            <TextField label=\"ID to Call\" value={idToCall} onChange={(e)=>setidToCall(e.target.value)} fullWidth/>\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button variant='contained' color='secondary' startIcon={<PhoneDisabled fontSize=\"large\"/>}\r\n                                fullWidth\r\n                                onClick={leaveCall}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Hang up\r\n                                </Button>\r\n                            ):(\r\n                                <Button variant='contained' color='primary' startIcon={<Phone fontSize=\"large\"/>}\r\n                                fullWidth\r\n                                onClick={()=>callUser(idToCall)}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Call\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>  \r\n                </form> \r\n                {console.log(children)}\r\n                {children}\r\n            </Paper>\r\n           \r\n          \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport { Typography , AppBar, } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import { makeStyles } from '@material-ui/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\n      appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '2px solid black',\r\n        \r\n        \r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '90%',\r\n          },\r\n          \r\n        },\r\n\r\n      image: {\r\n        marginLeft: '15px',\r\n      },\r\n\r\n      wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n\r\n}));\r\n\r\nconst App = ()=>{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n          \r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Hi there...</Typography>\r\n            </AppBar>\r\n\r\n            <VideoPlayer/>\r\n\r\n            <Options>\r\n                <Notifications/>\r\n            </Options>\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext.js';\r\n\r\nimport './styles.css';\r\n\r\nReactDOM.render(<ContextProvider><App/></ContextProvider>, document.getElementById('root'));\r\n"],"sourceRoot":""}